#!/usr/bin/env perl

use strict;
use utf8;
use Encode 'encode';

# -- Windows環境か否か
my $is_win = $^O =~ /MSWin/;

# -- Windows向けにShift-JIS出力関数を通す関数を先に用意
sub echo { print encode($is_win ? 'Shift_JIS' : 'UTF-8', shift) }

# -- 第一引数により関数にジャンプ
if( grep{$ARGV[0]eq$_}qw|
	init
	demo
| ){
	no strict;
	$ARGV[0]->();

	# -- 終了処理
	style(color=>'black');
	echo "\n  finished.\n";
	style(color=>'clear');

	exit;
}

# -- コマンド引数ヘルプ表示
echo "\n";
echo "Usage: genie COMMAND [arg...] [OPTIONS]\n";
echo "\n";
echo <<HELP;
\x1b[36mGENERAL\x1b[0m  | up                    起動（コンテナ作成）＆再起動
\x1b[36mCOMMANDS\x1b[0m | down                  終了（コンテナ削除）
         | version               kazaoki/genieのバージョンを表示
         | info                  詳細を表示
         | upgrade               kazaoki/genieのアップグレード
         | config                設定値を表示する
         | ip                    ホストIPを表示する
         | cli                   コマンドラインに入る
         | logs                  主要ログを表示する
         | htop                  htop実行
         | ngrok                 ngrokを使って外部に公開
         | cmd                   コンテナ内でコマンドを実行
         | build                 独自Dockerfileをビルドする
         | clear                 genieコンテナ強制rm、all→全dockerコンテナ強制rm
         | -m [RUNMODE]          実行モード：product|develop
         | -c [CONFIG TYPE]      設定タイプ：標準は general

\x1b[36mDATABASE\x1b[0m | mysql                 mysql実行
\x1b[36mCOMMANDS\x1b[0m | psql                  psql実行
         | dump                  ダンプ
         | restore               リストア
         | -d [DB CONNECT ID]    DB接続ID
         | -f [DB DUMP FILE]     対象のDBダンプファイル

\x1b[36mBROWSER\x1b[0m  | open                  ブラウザ起動
\x1b[36mCOMMANDS\x1b[0m | -s [URI SCHEMA]       httpかhttpsかを指定（未指定ならhttp）
         | -p [WEB PORT]         ポートを指定
         | -u [URL PATH]         パスを指定

\x1b[36mTEST\x1b[0m     | test [FEATURES]       テストを実行
\x1b[36mCOMMANDS\x1b[0m | -r [REPORT MAIL TO]   実行後のレポートHTMLの送り先

\x1b[36mOTHER\x1b[0m    | ftpsync               指定のFTPからDL同期
\x1b[36mCOMMANDS\x1b[0m | deploy                指定のGitリポジトリからpull同期
         | rmi-none              <none>状態のdockerイメージを全て削除

HELP

exit;

# メッセージ表示ヘルパー
# ----------------------
sub message {
	my ($type, $message) = @_;
	my %style;
	my %clear = (color=>'clear', bgcolor=>'clear', weight=>'clear', decoration=>'clear');
	if($type eq 'on') {
		%style = (color=>'cyan');
	} elsif($type eq 'off') {
		%style = (color=>'black');
	} elsif($type eq 'error') {
		%style = (color=>'red');
	}
	my $width = length Encode::encode('cp932', $message);
	style(%style);
	echo '  +' . ('-' x ($width+2)) . "+\n";
	echo '  | ' . $message . " |\n";
	echo '  +' . ('-' x ($width+2)) . "+\n";
	style(%clear);
}

# カラーセットヘルパー
# --------------------
# style(
# 	color      => 'red',
# 	bgcolor    => 'blue',
# 	weight     => 'bold',
# 	decoration => 'undeline',
# );
sub style {
	my %style = @_;
	my($color, $bgcolor) = @_;
	my %colors = (
		black        => "\x1b[90m",
		red          => "\x1b[91m",
		green        => "\x1b[92m",
		yellow       => "\x1b[93m",
		blue         => "\x1b[94m",
		magenta      => "\x1b[95m",
		cyan         => "\x1b[96m",
		white        => "\x1b[97m",
		dark_black   => "\x1b[30m",
		dark_red     => "\x1b[31m",
		dark_green   => "\x1b[32m",
		dark_yellow  => "\x1b[33m",
		dark_blue    => "\x1b[34m",
		dark_magenta => "\x1b[35m",
		dark_cyan    => "\x1b[36m",
		dark_white   => "\x1b[37m",
		clear        => "\x1b[39m",
	);
	my %bgcolors = (
		black        => "\x1b[100m",
		red          => "\x1b[101m",
		green        => "\x1b[102m",
		yellow       => "\x1b[103m",
		blue         => "\x1b[104m",
		magenta      => "\x1b[105m",
		cyan         => "\x1b[106m",
		white        => "\x1b[107m",
		dark_black   => "\x1b[40m",
		dark_red     => "\x1b[41m",
		dark_green   => "\x1b[42m",
		dark_yellow  => "\x1b[43m",
		dark_blue    => "\x1b[44m",
		dark_magenta => "\x1b[45m",
		dark_cyan    => "\x1b[46m",
		dark_white   => "\x1b[47m",
		clear        => "\x1b[49m",
	);
	my %weight = (
		bold    => "\x1b[1m",
		clear   => "\x1b[0m",
	);
	my %decoration = (
		underline => "\x1b[4m",
		clear     => "\x1b[0m",
	);
	my $set = '';
	$set .= $colors{$style{color}} ? $colors{$style{color}} : '';
	$set .= $bgcolors{$style{bgcolor}} ? $bgcolors{$style{bgcolor}} : '';
	$set .= $weight{$style{weight}} ? $weight{$style{weight}} : '';
	$set .= $decoration{$style{decoration}} ? $decoration{$style{decoration}} : '';
	print $set if $set;
}

# ====================================================================
# genie init                                                    初期化
# ====================================================================
sub init {
	# -- 設定ディレクトリの作成
	if( ! -d '.genie') {
		mkdir '.genie';
		`attrib +h .genie` if $is_win; # Windowsなら隠しフォルダにする
	}

	message(error=>'initしたかも！');

	# -- 初期設定ファイルの作成
}

# ====================================================================
# genie demo                                                      デモ
# ====================================================================
sub demo {

	message(off=>'offデモです');
	message(on=>'onデモです');
	message(error=>'errorデモです');

}
